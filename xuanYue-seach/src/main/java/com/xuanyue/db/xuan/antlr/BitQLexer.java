// Generated from BitQ.g4 by ANTLR 4.4

	package com.xuanyue.db.xuan.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BitQLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__7=1, T__6=2, T__5=3, T__4=4, T__3=5, T__2=6, T__1=7, T__0=8, TransArrt=9, 
		MIX=10, DESC=11, ASC=12, Phone_seach=13, PositionMatch=14, Contains=15, 
		Has_Every_Char=16, SELECT=17, FROM=18, WHERE=19, ON=20, LEFT=21, RIGHT=22, 
		JOIN=23, AND=24, OR=25, NOT=26, TO_DATE=27, ExprNot=28, COMMA=29, SEMI=30, 
		LIMIT=31, Order=32, By=33, NAME=34, DOT=35, Brackets_L=36, Brackets_R=37, 
		STRING=38, NUM=39, TRUE=40, FALSE=41, WS=42;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'"
	};
	public static final String[] ruleNames = {
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "TransArrt", 
		"MIX", "DESC", "ASC", "Phone_seach", "PositionMatch", "Contains", "Has_Every_Char", 
		"SELECT", "FROM", "WHERE", "ON", "LEFT", "RIGHT", "JOIN", "AND", "OR", 
		"NOT", "TO_DATE", "ExprNot", "COMMA", "SEMI", "LIMIT", "Order", "By", 
		"NAME", "DOT", "Brackets_L", "Brackets_R", "STRING", "NUM", "TRUE", "FALSE", 
		"WS"
	};


	public BitQLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BitQ.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2,\u0141\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3"+
		"\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\6\nm\n\n\r\n\16\nn\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3"+
		"\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3"+
		"\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3"+
		"\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3#"+
		"\3#\7#\u00ff\n#\f#\16#\u0102\13#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3\'\7\'"+
		"\u010e\n\'\f\'\16\'\u0111\13\'\3\'\3\'\3\'\3\'\3\'\7\'\u0118\n\'\f\'\16"+
		"\'\u011b\13\'\3\'\5\'\u011e\n\'\3(\6(\u0121\n(\r(\16(\u0122\3(\3(\6(\u0127"+
		"\n(\r(\16(\u0128\5(\u012b\n(\3(\5(\u012e\n(\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3*\3*\3+\6+\u013c\n+\r+\16+\u013d\3+\3+\2\2,\3\3\5\4\7\5\t\6\13\7\r"+
		"\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,\3\2\37\4\2OOoo\4\2KKkk\4\2ZZzz\4\2FFff\4\2GGgg\4\2UUuu\4\2EEe"+
		"e\4\2CCcc\4\2RRrr\4\2JJjj\4\2QQqq\4\2PPpp\4\2VVvv\4\2XXxx\4\2TTtt\4\2"+
		"[[{{\4\2NNnn\4\2HHhh\4\2YYyy\4\2IIii\4\2LLll\4\2DDdd\4\2C\\c|\6\2\62;"+
		"C\\aac|\4\2))^^\4\2$$^^\4\2hhnn\4\2WWww\5\2\13\f\17\17\"\"\u014c\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\3W\3\2\2\2\5Z\3\2\2\2\7]\3\2\2\2\t_\3\2\2\2\13b\3\2\2\2\rd\3\2\2"+
		"\2\17f\3\2\2\2\21h\3\2\2\2\23j\3\2\2\2\25p\3\2\2\2\27t\3\2\2\2\31y\3\2"+
		"\2\2\33}\3\2\2\2\35\u0089\3\2\2\2\37\u0097\3\2\2\2!\u00a0\3\2\2\2#\u00af"+
		"\3\2\2\2%\u00b6\3\2\2\2\'\u00bb\3\2\2\2)\u00c1\3\2\2\2+\u00c4\3\2\2\2"+
		"-\u00c9\3\2\2\2/\u00cf\3\2\2\2\61\u00d4\3\2\2\2\63\u00d8\3\2\2\2\65\u00db"+
		"\3\2\2\2\67\u00df\3\2\2\29\u00e7\3\2\2\2;\u00e9\3\2\2\2=\u00eb\3\2\2\2"+
		"?\u00ed\3\2\2\2A\u00f3\3\2\2\2C\u00f9\3\2\2\2E\u00fc\3\2\2\2G\u0103\3"+
		"\2\2\2I\u0105\3\2\2\2K\u0107\3\2\2\2M\u011d\3\2\2\2O\u0120\3\2\2\2Q\u012f"+
		"\3\2\2\2S\u0134\3\2\2\2U\u013b\3\2\2\2WX\7>\2\2XY\7?\2\2Y\4\3\2\2\2Z["+
		"\7#\2\2[\\\7?\2\2\\\6\3\2\2\2]^\7]\2\2^\b\3\2\2\2_`\7@\2\2`a\7?\2\2a\n"+
		"\3\2\2\2bc\7>\2\2c\f\3\2\2\2de\7_\2\2e\16\3\2\2\2fg\7?\2\2g\20\3\2\2\2"+
		"hi\7@\2\2i\22\3\2\2\2jl\7A\2\2km\4\62;\2lk\3\2\2\2mn\3\2\2\2nl\3\2\2\2"+
		"no\3\2\2\2o\24\3\2\2\2pq\t\2\2\2qr\t\3\2\2rs\t\4\2\2s\26\3\2\2\2tu\t\5"+
		"\2\2uv\t\6\2\2vw\t\7\2\2wx\t\b\2\2x\30\3\2\2\2yz\t\t\2\2z{\t\7\2\2{|\t"+
		"\b\2\2|\32\3\2\2\2}~\t\n\2\2~\177\t\13\2\2\177\u0080\t\f\2\2\u0080\u0081"+
		"\t\r\2\2\u0081\u0082\t\6\2\2\u0082\u0083\7a\2\2\u0083\u0084\t\7\2\2\u0084"+
		"\u0085\t\6\2\2\u0085\u0086\t\t\2\2\u0086\u0087\t\b\2\2\u0087\u0088\t\13"+
		"\2\2\u0088\34\3\2\2\2\u0089\u008a\t\n\2\2\u008a\u008b\t\f\2\2\u008b\u008c"+
		"\t\7\2\2\u008c\u008d\t\3\2\2\u008d\u008e\t\16\2\2\u008e\u008f\t\3\2\2"+
		"\u008f\u0090\t\f\2\2\u0090\u0091\t\r\2\2\u0091\u0092\t\2\2\2\u0092\u0093"+
		"\t\t\2\2\u0093\u0094\t\16\2\2\u0094\u0095\t\b\2\2\u0095\u0096\t\13\2\2"+
		"\u0096\36\3\2\2\2\u0097\u0098\t\b\2\2\u0098\u0099\t\f\2\2\u0099\u009a"+
		"\t\r\2\2\u009a\u009b\t\16\2\2\u009b\u009c\t\t\2\2\u009c\u009d\t\3\2\2"+
		"\u009d\u009e\t\r\2\2\u009e\u009f\t\7\2\2\u009f \3\2\2\2\u00a0\u00a1\t"+
		"\13\2\2\u00a1\u00a2\t\t\2\2\u00a2\u00a3\t\7\2\2\u00a3\u00a4\7a\2\2\u00a4"+
		"\u00a5\t\6\2\2\u00a5\u00a6\t\17\2\2\u00a6\u00a7\t\6\2\2\u00a7\u00a8\t"+
		"\20\2\2\u00a8\u00a9\t\21\2\2\u00a9\u00aa\7a\2\2\u00aa\u00ab\t\b\2\2\u00ab"+
		"\u00ac\t\13\2\2\u00ac\u00ad\t\t\2\2\u00ad\u00ae\t\20\2\2\u00ae\"\3\2\2"+
		"\2\u00af\u00b0\t\7\2\2\u00b0\u00b1\t\6\2\2\u00b1\u00b2\t\22\2\2\u00b2"+
		"\u00b3\t\6\2\2\u00b3\u00b4\t\b\2\2\u00b4\u00b5\t\16\2\2\u00b5$\3\2\2\2"+
		"\u00b6\u00b7\t\23\2\2\u00b7\u00b8\t\20\2\2\u00b8\u00b9\t\f\2\2\u00b9\u00ba"+
		"\t\2\2\2\u00ba&\3\2\2\2\u00bb\u00bc\t\24\2\2\u00bc\u00bd\t\13\2\2\u00bd"+
		"\u00be\t\6\2\2\u00be\u00bf\t\20\2\2\u00bf\u00c0\t\6\2\2\u00c0(\3\2\2\2"+
		"\u00c1\u00c2\t\f\2\2\u00c2\u00c3\t\r\2\2\u00c3*\3\2\2\2\u00c4\u00c5\t"+
		"\22\2\2\u00c5\u00c6\t\6\2\2\u00c6\u00c7\t\23\2\2\u00c7\u00c8\t\16\2\2"+
		"\u00c8,\3\2\2\2\u00c9\u00ca\t\20\2\2\u00ca\u00cb\t\3\2\2\u00cb\u00cc\t"+
		"\25\2\2\u00cc\u00cd\t\13\2\2\u00cd\u00ce\t\16\2\2\u00ce.\3\2\2\2\u00cf"+
		"\u00d0\t\26\2\2\u00d0\u00d1\t\f\2\2\u00d1\u00d2\t\3\2\2\u00d2\u00d3\t"+
		"\r\2\2\u00d3\60\3\2\2\2\u00d4\u00d5\t\t\2\2\u00d5\u00d6\t\r\2\2\u00d6"+
		"\u00d7\t\5\2\2\u00d7\62\3\2\2\2\u00d8\u00d9\t\f\2\2\u00d9\u00da\t\20\2"+
		"\2\u00da\64\3\2\2\2\u00db\u00dc\t\r\2\2\u00dc\u00dd\t\f\2\2\u00dd\u00de"+
		"\t\16\2\2\u00de\66\3\2\2\2\u00df\u00e0\t\16\2\2\u00e0\u00e1\t\f\2\2\u00e1"+
		"\u00e2\7a\2\2\u00e2\u00e3\t\5\2\2\u00e3\u00e4\t\t\2\2\u00e4\u00e5\t\16"+
		"\2\2\u00e5\u00e6\t\6\2\2\u00e68\3\2\2\2\u00e7\u00e8\7#\2\2\u00e8:\3\2"+
		"\2\2\u00e9\u00ea\7.\2\2\u00ea<\3\2\2\2\u00eb\u00ec\7=\2\2\u00ec>\3\2\2"+
		"\2\u00ed\u00ee\t\22\2\2\u00ee\u00ef\t\3\2\2\u00ef\u00f0\t\2\2\2\u00f0"+
		"\u00f1\t\3\2\2\u00f1\u00f2\t\16\2\2\u00f2@\3\2\2\2\u00f3\u00f4\t\f\2\2"+
		"\u00f4\u00f5\t\20\2\2\u00f5\u00f6\t\5\2\2\u00f6\u00f7\t\6\2\2\u00f7\u00f8"+
		"\t\20\2\2\u00f8B\3\2\2\2\u00f9\u00fa\t\27\2\2\u00fa\u00fb\t\21\2\2\u00fb"+
		"D\3\2\2\2\u00fc\u0100\t\30\2\2\u00fd\u00ff\t\31\2\2\u00fe\u00fd\3\2\2"+
		"\2\u00ff\u0102\3\2\2\2\u0100\u00fe\3\2\2\2\u0100\u0101\3\2\2\2\u0101F"+
		"\3\2\2\2\u0102\u0100\3\2\2\2\u0103\u0104\7\60\2\2\u0104H\3\2\2\2\u0105"+
		"\u0106\7*\2\2\u0106J\3\2\2\2\u0107\u0108\7+\2\2\u0108L\3\2\2\2\u0109\u010f"+
		"\7)\2\2\u010a\u010e\n\32\2\2\u010b\u010c\7^\2\2\u010c\u010e\13\2\2\2\u010d"+
		"\u010a\3\2\2\2\u010d\u010b\3\2\2\2\u010e\u0111\3\2\2\2\u010f\u010d\3\2"+
		"\2\2\u010f\u0110\3\2\2\2\u0110\u0112\3\2\2\2\u0111\u010f\3\2\2\2\u0112"+
		"\u011e\7)\2\2\u0113\u0119\7$\2\2\u0114\u0118\n\33\2\2\u0115\u0116\7^\2"+
		"\2\u0116\u0118\13\2\2\2\u0117\u0114\3\2\2\2\u0117\u0115\3\2\2\2\u0118"+
		"\u011b\3\2\2\2\u0119\u0117\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u011c\3\2"+
		"\2\2\u011b\u0119\3\2\2\2\u011c\u011e\7$\2\2\u011d\u0109\3\2\2\2\u011d"+
		"\u0113\3\2\2\2\u011eN\3\2\2\2\u011f\u0121\4\62;\2\u0120\u011f\3\2\2\2"+
		"\u0121\u0122\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u012a"+
		"\3\2\2\2\u0124\u0126\5G$\2\u0125\u0127\4\62;\2\u0126\u0125\3\2\2\2\u0127"+
		"\u0128\3\2\2\2\u0128\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012b\3\2"+
		"\2\2\u012a\u0124\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u012d\3\2\2\2\u012c"+
		"\u012e\t\34\2\2\u012d\u012c\3\2\2\2\u012d\u012e\3\2\2\2\u012eP\3\2\2\2"+
		"\u012f\u0130\t\16\2\2\u0130\u0131\t\20\2\2\u0131\u0132\t\35\2\2\u0132"+
		"\u0133\t\6\2\2\u0133R\3\2\2\2\u0134\u0135\t\23\2\2\u0135\u0136\t\t\2\2"+
		"\u0136\u0137\t\22\2\2\u0137\u0138\t\7\2\2\u0138\u0139\t\6\2\2\u0139T\3"+
		"\2\2\2\u013a\u013c\t\36\2\2\u013b\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013d"+
		"\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0140\b+"+
		"\2\2\u0140V\3\2\2\2\17\2n\u0100\u010d\u010f\u0117\u0119\u011d\u0122\u0128"+
		"\u012a\u012d\u013d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}